// This is Eugene Meyer's algorithm adapted for LTIHub: http://www.xmailserver.org/diff2.pdf
function shortestEditScript(previousVersion, currentVersion) {
	let savedDiagonals = meyersForwardSES(previousVersion, currentVersion);
	const INDEX_SHIFT = Math.round(currentVersion.length + 1);

	let insertions = [];
	let deletions = [];
	let x = previousVersion.length;
	let y = currentVersion.length;
	for (let d = savedDiagonals.length - 1; (d >= 0) && (x > 0 || y > 0); d--) {
		diagonals = savedDiagonals[d];

		let k = x - y;
		let downNotRight = (k === -d) || (k !== d && diagonals[INDEX_SHIFT + k - 1] < diagonals[INDEX_SHIFT + k + 1]);

		let previousK = downNotRight ? (k + 1) : (k - 1);

		let xStart = diagonals[INDEX_SHIFT + previousK];
		let yStart = xStart - previousK;

		if (yStart >= 0) {
			if (downNotRight) {

				if (insertions.length > 0 && insertions[0][0] === yStart + 1) {
					insertions[0][0] = yStart;
					insertions[0][1].unshift(currentVersion.charAt(yStart));
				} else {
					insertions.unshift([yStart, []]);
					insertions[0][1].unshift(currentVersion.charAt(yStart));
				}

			} else {

				if (deletions.length > 0 && deletions[0][0] === xStart + 1) {
					deletions[0][0] = xStart;
					deletions[0][1]++;
				} else {
					deletions.unshift([xStart, 1]);
				}

			}
		}

		x = xStart;
		y = yStart;
	}

	// Generate the edit script from instructions
	let editScript = "";
	for (let i = deletions.length - 1; i >= 0; i--) {
		editScript += deletions[i][0] + "," + deletions[i][1] + "|";
	}

	if (insertions.length > 0)
		editScript += " ";

	for (let i = 0; i < insertions.length; i++) {
		editScript += (insertions[i][0]) + "," + insertions[i][1].length + "," + insertions[i][1].join("");
	}

	return editScript;
}

function meyersForwardSES(previousVersion, currentVersion) {
	const MAX = previousVersion.length + currentVersion.length;
	let savedDiagonals = [];

	let diagonals = [];
	for (let i = 0; i <= MAX; i++) {
		diagonals[i] = -1;
	}

	const INDEX_SHIFT = currentVersion.length + 1;
	diagonals[1 + INDEX_SHIFT] = 0;
	for (let d = 0; d <= MAX; d++) {

		let kStart = -d;
		if (kStart < -currentVersion.length) {
			kStart = -currentVersion.length;
			if ((kStart % 2) !== (-d % 2)) {
				kStart--;
			}
		}
		for (let k = kStart; k <= Math.min(d, previousVersion.length); k += 2) {

			let downNotRight = (k === -d) || (k !== d && diagonals[INDEX_SHIFT + k - 1] < diagonals[INDEX_SHIFT + k + 1]);

			let kPrev = downNotRight ? (k + 1) : (k - 1);

			let xStart = diagonals[INDEX_SHIFT + kPrev];
			let yStart = xStart - kPrev;

			let xMid = downNotRight ? (xStart) : (xStart + 1);
			let yMid = xMid - k;

			let xEnd = xMid;
			let yEnd = yMid;

			while (xEnd < previousVersion.length && yEnd < currentVersion.length && previousVersion.charAt(xEnd) === currentVersion.charAt(yEnd)) {
				xEnd++;
				yEnd++;
			}

			diagonals[INDEX_SHIFT + k] = xEnd;

			if (xEnd >= previousVersion.length && yEnd >= currentVersion.length) {
				savedDiagonals.push(diagonals);
				return savedDiagonals;
			}
		}
		savedDiagonals.push(diagonals.slice());
	}
}

// Apply a delta generated by the above implementation of Meyer's aglorithm above
function applyEditScript(input, editScript) {
	let output = input;

	let i = 0;
	/*
		Apply deletions
			a deletion instruction follows this fomat: (indexInResult,numberOfDeletionsAfterIndex|)
			for example to change "Hello World!" to "Hold": "11,1|5,4|1,3|"
	*/
	while (i < editScript.length && editScript.charAt(i) !== " ") {
		let indexOfParameterSeparation = editScript.indexOf(",", i);
		let indexOfInstanceSeparation = editScript.indexOf("|", indexOfParameterSeparation + 1);

		let indexOfDeletion = Number.parseInt(editScript.substring(i, indexOfParameterSeparation));
		let numberOfDeletions = Number.parseInt(editScript.substring(indexOfParameterSeparation + 1, indexOfInstanceSeparation));

		output = output.substring(0, indexOfDeletion) + output.substring(indexOfDeletion + numberOfDeletions);

		i = Math.max(indexOfInstanceSeparation + 1, i + 1);
	}


	// Skip past the space that separates the deletion commands from the insertion commands
	if (editScript.charAt(i) === " ")
		i++;

	/*
		Apply insertions
			an insertion instruction follows this format: (indexInResult,lengthOfInsertion,insertion)
			for example to change "Hold" to "Hello World!": "1,3,ell5,4, Wor11,1,!"
	*/
	while (i < editScript.length) {
		let indexOfFirstSeparation = editScript.indexOf(",", i);
		let indexOfSecondSeparation = editScript.indexOf(",", indexOfFirstSeparation + 1);

		let indexOfInsertion = Number.parseInt(editScript.substring(i, indexOfFirstSeparation));
		let lengthOfInsertion = Number.parseInt(editScript.substring(indexOfFirstSeparation + 1, indexOfSecondSeparation));
		let insertion = editScript.substring(indexOfSecondSeparation + 1, (indexOfSecondSeparation + 1) + lengthOfInsertion);
		
		output = output.substring(0, indexOfInsertion) + insertion + output.substring(indexOfInsertion);

		i = Math.max((indexOfSecondSeparation + 1) + lengthOfInsertion, i + 1);
	}
	
	return output;
}